/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface;

import Business.Person;
import Business.PersonDirectory;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author poorv
 */
public class ListPersonJPanel extends javax.swing.JPanel {
    
    private JPanel UserProcessContainer;
    private PersonDirectory personDirectory;

    /**
     * Creates new form ListPersonJPanel
     */
   

    ListPersonJPanel(JPanel UserProcessContainer, PersonDirectory personDirectory) {
        initComponents();
        this.UserProcessContainer = UserProcessContainer;
        this.personDirectory = personDirectory;
        populatetable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblListPerson = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPerson = new javax.swing.JTable();
        btnViewDetails = new javax.swing.JButton();
        btnDeleteDetails = new javax.swing.JButton();
        btnBackL = new javax.swing.JButton();

        lblListPerson.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblListPerson.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblListPerson.setText("List Person");
        lblListPerson.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        tblPerson.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "First Name", "Last Name", "Work City", "Work Zip", "Home City", "Home Zip"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPerson);
        if (tblPerson.getColumnModel().getColumnCount() > 0) {
            tblPerson.getColumnModel().getColumn(0).setResizable(false);
            tblPerson.getColumnModel().getColumn(1).setResizable(false);
            tblPerson.getColumnModel().getColumn(2).setResizable(false);
            tblPerson.getColumnModel().getColumn(3).setResizable(false);
            tblPerson.getColumnModel().getColumn(4).setResizable(false);
            tblPerson.getColumnModel().getColumn(5).setResizable(false);
        }

        btnViewDetails.setText("View Details");
        btnViewDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDetailsActionPerformed(evt);
            }
        });

        btnDeleteDetails.setText("Delete Details");
        btnDeleteDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteDetailsActionPerformed(evt);
            }
        });

        btnBackL.setText("Back");
        btnBackL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackLActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(btnBackL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblListPerson, javax.swing.GroupLayout.DEFAULT_SIZE, 758, Short.MAX_VALUE)
                .addGap(39, 39, 39))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnViewDetails)
                .addGap(28, 28, 28)
                .addComponent(btnDeleteDetails)
                .addGap(338, 338, 338))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(224, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(224, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(lblListPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(btnBackL)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 175, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnViewDetails)
                    .addComponent(btnDeleteDetails))
                .addGap(333, 333, 333))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(86, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(379, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackLActionPerformed
        // TODO add your handling code here:
        UserProcessContainer.remove(this);
        CardLayout layout = (CardLayout) UserProcessContainer.getLayout();
        layout.previous(UserProcessContainer);
    }//GEN-LAST:event_btnBackLActionPerformed

    private void btnDeleteDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteDetailsActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblPerson.getSelectedRow();
        if (selectedRow >=0){
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "would you like to delete this Person's details?", "warning", dialogButton);
            if(dialogResult == JOptionPane.YES_OPTION){
                Person person = (Person)tblPerson .getValueAt(selectedRow, 0);
                personDirectory.deletePerson(person);
                populatetable();
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Please select a row from the table first","warning",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteDetailsActionPerformed

    private void btnViewDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDetailsActionPerformed
        // TODO add your handling code here:
         int selectedRow = tblPerson.getSelectedRow();
       if (selectedRow < 0){
         JOptionPane.showMessageDialog(null, "Please select a row from the table first to view","warning",JOptionPane.WARNING_MESSAGE);   
       }
       else{
           Person person = (Person)tblPerson.getValueAt(selectedRow, 0);
           ViewPersonJPanel panel = new ViewPersonJPanel(UserProcessContainer , person);
           UserProcessContainer.add("ViewPersonJPanel",panel );
           CardLayout layout = (CardLayout) UserProcessContainer.getLayout();
           layout.next(UserProcessContainer);
       }
    }//GEN-LAST:event_btnViewDetailsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBackL;
    private javax.swing.JButton btnDeleteDetails;
    private javax.swing.JButton btnViewDetails;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblListPerson;
    private javax.swing.JTable tblPerson;
    // End of variables declaration//GEN-END:variables

    private void populatetable() {
       DefaultTableModel dtm = (DefaultTableModel) tblPerson.getModel();
        dtm.setRowCount(0);
        for (Person person : personDirectory.getPersonList()){
        Object[] row = new Object[6];
        row[0] = person;
        row[1] = person.getLastName();
        row[2] = person.getWorkAddress().getCity();
        row[3] = person.getWorkAddress().getZipCode();
        row[4] = person.getHomeaddress().getCity();
        row[5] = person.getHomeaddress().getZipCode();
        dtm.addRow(row);
        }
    }
}
